(add-hook 'treemacs-mode-hook (lambda ()
                                (define-key treemacs-mode-map "j" 'treemacs-next-line)
                                (define-key treemacs-mode-map "k" 'treemacs-previous-line)
                                (define-key treemacs-mode-map "ov" 'treemacs-visit-node-horizontal-split)
                                (define-key treemacs-mode-map "os" 'treemacs-visit-node-vertical-split)
                                (define-key treemacs-mode-map "/" 'evil-ex-search-forward)
                                (define-key treemacs-mode-map "n" 'evil-ex-search-next)
                                (define-key treemacs-mode-map "N" 'evil-ex-search-previous)
                                (define-key treemacs-mode-map "zz" 'evil-scroll-line-to-center)
                                (define-key treemacs-mode-map "oh" nil)))

(defun treemacs-show-project-root ()
  (interactive)
  (require 'treemacs)
  (let ((project-root (my-get-project-root-directory))
        (file-name (buffer-file-name (current-buffer))))
    (if (or (not file-name) (not project-root))
        (treemacs-select-window)
        (when (not (treemacs-is-path project-root :in-workspace))
          (treemacs-add-project-to-workspace project-root (file-name-base project-root)))
        (treemacs-find-file)
        (treemacs-select-window))))

(provide 'init-sidebar)
